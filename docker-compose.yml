services:

  ey.api:
    image: ${DOCKER_REGISTRY-}eyapi
    container_name: webapi
    ports:
      - "5100:8080"
      - "5101:8081"
    depends_on:
      - redis-cache
      - sqlserver-db
      - seq-logging
      - jaeger-tracing
      - prometheus-metrics
    build:
      context: .
      dockerfile: EY.API\Dockerfile
    # environment:
    #   - OTEL_EXPORTER_OTLP_ENDPOINT=http://jaeger:4317


  redis-cache:
    image: redis:latest
    container_name: redis
    volumes:
      - vol-redis:/data
    ports:
      - 6379:6379

  redis_exporter:
    image: oliver006/redis_exporter:latest
    container_name: redis_exporter
    environment:
      - REDIS_ADDR=redis:6379
    ports:
      - 9121:9121
    depends_on:
      - redis-cache

  redisinsight-ui:
    image: redis/redisinsight:latest
    container_name: redisinsight
    ports:
      - 5540:5540
    depends_on:
      - redis-cache
    volumes:
      - vol-redis-insight:/data

  sqlserver-db:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: sqlserver
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_PID=Express
      - SA_PASSWORD=Strong_password_123!
    ports:
      - 1433:1433
    volumes:
      - vol-sqlserver:/var/opt/mssql

  seq-logging:
    image: datalust/seq:latest
    container_name: seq
    volumes:
      - vol-seq:/data
    ports:
      - 5341:5341
      - 80:80
    environment:
      - ACCEPT_EULA=Y

  jaeger-tracing:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger
    environment:
      - METRICS_STORAGE_TYPE=prometheus
      - PROMETHEUS_SERVER_URL=http://prometheus:9090
    ports:
      - 4317:4317
      - 4318:4318
      - 16686:16686

  prometheus-metrics:
    image: prom/prometheus:latest
    container_name: prometheus
    command:
      - --config.file=/etc/prometheus/prometheus-config.yml
    volumes:
      - ./prometheus-config.yml:/etc/prometheus/prometheus-config.yml:ro # arquivo de configuração
      - vol-prometheus:/prometheus
    ports:
      - 9090:9090
  
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - vol-grafana:/var/lib/grafana
      - ./grafana-datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - prometheus-metrics

  keycloak: #Development tests only
    image: quay.io/keycloak/keycloak:latest
    command: start-dev
    container_name: keycloak
    ports:
      - 9191:8080
    environment:
      - KC_BOOTSTRAP_ADMIN_USERNAME=admin
      - KC_BOOTSTRAP_ADMIN_PASSWORD=adminpassword
      - KC_FEATURES=opentelemetry
      - KC_HEALTH_ENABLED=true
      - KC_METRICS_ENABLED=true
      - KC_TRACING_ENABLED=true
      - KC_TRACING_ENDPOINT=http://jaeger:4317
      - KC_HTTP_ENABLED=true
      - KC_DB=mssql
      - KC_DB_URL=jdbc:sqlserver://sqlserver:1433;databaseName=keycloak;encrypt=false;trustServerCertificate=true
      - KC_DB_USERNAME=sa
      - KC_DB_PASSWORD=Strong_password_123!
      - KC_HOSTNAME=localhost # Define o hostname do Keycloak
    depends_on:
      - sqlserver-db

volumes:
  vol-redis:
  vol-redis-insight:
  vol-seq:
  vol-sqlserver:
  vol-prometheus:
  vol-grafana:
  